/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.smit.hwtest;

public final class R {
    public static final class array {
        /**  Display settings.  The type of animations to show. 
         */
        public static final int animations_entries=0x7f050002;
        /**  Display settings.  Summary for each type of animation. 
         */
        public static final int animations_summaries=0x7f050003;
        /**  Do not translate. 
         */
        public static final int animations_values=0x7f050004;
        /**  Authentication Types used in APN editor 
         */
        public static final int apn_auth_entries=0x7f05002b;
        public static final int apn_auth_values=0x7f05002c;
        /**  Match with constants in BatteryHistory class 
         */
        public static final int battery_history_type_spinner=0x7f050022;
        /**  Match with constants in BatteryStats class 
         */
        public static final int battery_history_which_spinner=0x7f050023;
        public static final int composite_setting_entries=0x7f05000b;
        /**  Display setting.  Summary for each type of output. 
         */
        public static final int composite_setting_summaries=0x7f05000c;
        /**  Do not translate. 
         */
        public static final int composite_setting_values=0x7f05000d;
        /**  There is a setting to control the format of dates displayed throughout the system.  This is in the Date & Time Settings screen.  These will be adjusted to use punctuation appropriate to the user's locale. 
         */
        public static final int date_format_values=0x7f050001;
        /**  Sound settings for emergency tone. 
         */
        public static final int emergency_tone_entries=0x7f050027;
        /**  Do not translate. 
         */
        public static final int emergency_tone_values=0x7f050028;
        public static final int hdmi_setting_entries=0x7f050008;
        /**  Display setting.  Summary for each type of output. 
         */
        public static final int hdmi_setting_summaries=0x7f050009;
        /**  Do not translate. 
         */
        public static final int hdmi_setting_values=0x7f05000a;
        /**  Do not translate. 
0817.wzj
        <item>COMPOSITE</item>
        <item>COMPONENT</item> 
         */
        public static final int output_select_entries=0x7f050005;
        /**  Display setting.  Summary for each type of output. 
0817.wzj
        <item>Composite</item>
        <item>Component</item>

         */
        public static final int output_select_summaries=0x7f050006;
        /**  Do not translate. 
         */
        public static final int output_select_values=0x7f050007;
        /**  Display settings.  The delay in inactivity before the screen is turned off. These are shown ain a list dialog. 
         */
        public static final int screen_timeout_entries=0x7f050014;
        /**  Do not translate. 
         */
        public static final int screen_timeout_values=0x7f050015;
        public static final int spdif_setting_entries=0x7f050011;
        /**  Display setting.  Summary for each type of output. 
         */
        public static final int spdif_setting_summaries=0x7f050012;
        /**  Do not translate. 
         */
        public static final int spdif_setting_values=0x7f050013;
        /**  Locales in this list are displayed with the corresponding
         name from special_locale_names instead of using the name
         from Locale.getDisplayName(). 
         */
        public static final int special_locale_codes=0x7f050029;
        public static final int special_locale_names=0x7f05002a;
        /**  The time zone picker screen has two levels.  The first level allows the user to choose a region. 
         */
        public static final int timezone_filters=0x7f050000;
        /**  Do not translate. 
         */
        public static final int tts_demo_strings=0x7f05001c;
        /**  Default language choices 
         */
        public static final int tts_lang_entries=0x7f05001a;
        /**  Do not translate. 
         */
        public static final int tts_lang_values=0x7f05001b;
        /**  Default pitch choices 
         */
        public static final int tts_pitch_entries=0x7f050018;
        /**  Do not translate. 
         */
        public static final int tts_pitch_values=0x7f050019;
        /**  TTS settings 
 Default speech rate choices 
         */
        public static final int tts_rate_entries=0x7f050016;
        /**  Do not translate. 
         */
        public static final int tts_rate_values=0x7f050017;
        public static final int ui_setting_entries=0x7f05000e;
        /**  Display setting.  Summary for each type of output. 
         */
        public static final int ui_setting_summaries=0x7f05000f;
        /**  Do not translate. 
         */
        public static final int ui_setting_values=0x7f050010;
        /**  Display options for UsageStats class 
         */
        public static final int usage_stats_display_order_types=0x7f050024;
        /**  EAP method 
         */
        public static final int wifi_eap_entries=0x7f050025;
        /**  Phase 2 options 
         */
        public static final int wifi_phase2_entries=0x7f050026;
        /**  Wi-Fi settings.  The type of security a Wi-Fi network has.  The user can choose this when he adds a manual network, or configures an existing network. 
         */
        public static final int wifi_security_entries=0x7f05001d;
        /**  Wi-Fi settings.  The type of security a Wi-Fi network has.  The user can choose this when he adds a manual network, or configures an existing network. 
         */
        public static final int wifi_security_without_auto_entries=0x7f05001e;
        /**  Wi-Fi settings. Presented as a list dialog to the user to choose the Wi-Fi sleep policy. 
         */
        public static final int wifi_sleep_policy_entries=0x7f050020;
        /**  Do not translate. 
         */
        public static final int wifi_sleep_policy_values=0x7f050021;
        /**  Wi-Fi settings.  Presented as a list dialog to the user.  He chooses the type of WEP key he entered. 
         */
        public static final int wifi_wep_type=0x7f05001f;
    }
    public static final class attr {
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int icon=0x7f010001;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_encrypted=0x7f010000;
    }
    public static final class bool {
        /**  Whether or not the dock settings are to be displayed for this device when docked 
         */
        public static final int has_dock_settings=0x7f060001;
        /**  Whether or not there is a notification led that is too intrusive to be pulsing
         constantly 
         */
        public static final int has_intrusive_led=0x7f060000;
    }
    public static final class color {
        public static final int black=0x7f070000;
        public static final int red=0x7f070001;
    }
    public static final class dimen {
        public static final int vpn_connect_input_box_label_width=0x7f080002;
        public static final int vpn_connect_margin_right=0x7f080000;
        public static final int vpn_connect_normal_text_size=0x7f080001;
    }
    public static final class drawable {
        public static final int icon=0x7f020000;
        public static final int icon_test_fail=0x7f020001;
        public static final int icon_test_ok=0x7f020002;
    }
    public static final class id {
        public static final int but_connect=0x7f0b000c;
        public static final int but_fail=0x7f0b000a;
        public static final int but_next=0x7f0b0008;
        public static final int but_ok=0x7f0b0009;
        public static final int but_return=0x7f0b0007;
        public static final int icon=0x7f0b0003;
        public static final int myTextView=0x7f0b000b;
        public static final int test_Exit=0x7f0b0002;
        public static final int test_Factory=0x7f0b0001;
        public static final int test_Normal=0x7f0b0000;
        public static final int test_color_text1=0x7f0b0004;
        public static final int test_color_text2=0x7f0b0005;
        public static final int test_color_text3=0x7f0b0006;
    }
    public static final class layout {
        public static final int main=0x7f030000;
        public static final int preference_icon=0x7f030001;
        public static final int test_color=0x7f030002;
        public static final int test_sensor=0x7f030003;
        public static final int test_wifi=0x7f030004;
    }
    public static final class string {
        public static final int app_name=0x7f090001;
        public static final int but_connect=0x7f09001a;
        public static final int but_fail=0x7f090016;
        public static final int but_next=0x7f090019;
        public static final int but_ok=0x7f090015;
        public static final int but_retest=0x7f090018;
        public static final int but_return=0x7f090017;
        public static final int green=0x7f09001b;
        public static final int hello=0x7f090000;
        public static final int main_exit=0x7f090005;
        public static final int main_factory=0x7f090004;
        public static final int main_normal=0x7f090003;
        /**  Strings for Dialog no button 
         */
        public static final int no=0x7f090014;
        public static final int red=0x7f09001c;
        public static final int t_bt_title=0x7f090009;
        public static final int t_codec_title=0x7f090011;
        public static final int t_gps_title=0x7f09000b;
        public static final int t_hdmi_title=0x7f09000d;
        public static final int t_key_title=0x7f090008;
        /**  Strings for Test items 
         */
        public static final int t_lcd_title=0x7f090007;
        public static final int t_led_title=0x7f090010;
        public static final int t_rtc_title=0x7f090012;
        public static final int t_sensor_title=0x7f09000f;
        public static final int t_test_start_title=0x7f090006;
        public static final int t_usb_title=0x7f09000c;
        public static final int t_virabater_title=0x7f09000e;
        public static final int t_wifi_title=0x7f09000a;
        public static final int testings_label=0x7f090002;
        /**  Strings for Dialog yes button 
         */
        public static final int yes=0x7f090013;
    }
    public static final class style {
        public static final int TextAppearance=0x7f0a0006;
        public static final int TextAppearance_info_label=0x7f0a0007;
        public static final int TextAppearance_info_small=0x7f0a0008;
        public static final int TextAppearance_info_value=0x7f0a0009;
        public static final int entry_layout=0x7f0a0004;
        public static final int form_value=0x7f0a0005;
        public static final int info_label=0x7f0a0000;
        public static final int info_layout=0x7f0a0003;
        public static final int info_small=0x7f0a0002;
        public static final int info_value=0x7f0a0001;
    }
    public static final class xml {
        public static final int testings=0x7f040000;
    }
    public static final class styleable {
        /** Attributes that can be used with a IconPreferenceScreen.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #IconPreferenceScreen_icon com.smit.hwtest:icon}</code></td><td></td></tr>
           </table>
           @see #IconPreferenceScreen_icon
         */
        public static final int[] IconPreferenceScreen = {
            0x7f010001
        };
        /**
          <p>This symbol is the offset where the {@link com.smit.hwtest.R.attr#icon}
          attribute's value can be found in the {@link #IconPreferenceScreen} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:icon
        */
        public static final int IconPreferenceScreen_icon = 0;
        /** Attributes that can be used with a WifiEncryptionState.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #WifiEncryptionState_state_encrypted com.smit.hwtest:state_encrypted}</code></td><td></td></tr>
           </table>
           @see #WifiEncryptionState_state_encrypted
         */
        public static final int[] WifiEncryptionState = {
            0x7f010000
        };
        /**
          <p>This symbol is the offset where the {@link com.smit.hwtest.R.attr#state_encrypted}
          attribute's value can be found in the {@link #WifiEncryptionState} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:state_encrypted
        */
        public static final int WifiEncryptionState_state_encrypted = 0;
    };
}
